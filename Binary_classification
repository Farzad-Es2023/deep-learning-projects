import numpy as np
import torch
from torch import nn
import matplotlib.pyplot as plt
from sklearn.datasets import make_circles

# Make 1000 samples
n_samples = 1000

# Create circles
X, y = make_circles(n_samples,
                    noise=0.03, # a little bit of noise to the dots
                    random_state=42) # keep random state so we get the same value


print(X.shape), print(y.shape), print(X.dtype), print(type(X))
# convert to tensor ----> since Sklearn leverages Numpy, we should first convert data imported from it to tensors

X=torch.from_numpy(X)
X=X.type(torch.float32)

y=torch.from_numpy(y).unsqueeze(dim=1)
y=y.type(torch.float32)
#checking...
print(X.shape), print(y.shape), print(X.dtype), print(type(X))
print(y.dtype), print(type(y))
import pandas as pd
circles=pd.DataFrame({"X1":X[:,0],"X2":X[:,1],"label":y.squeeze()}) #we get error if we do not use squeeze
circles.head()
